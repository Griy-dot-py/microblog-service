from typing import Protocol
from models import TweetLoad, TweetDump, User


class MicroblogUserProtocol(Protocol):
    def __init__(self, api_key: str) -> None: ...
    
    async def authorize(self) -> None: ...
    
    async def authorize_user(cls, api_key: str) -> "MicroblogUserProtocol": ...
    
    async def post_tweet(self, tweet: TweetLoad) -> None: ...
    
    async def del_tweet(self, tweet_id: int) -> None: ...
    
    async def like(self, tweet_id: int) -> None: ...
    
    async def remove_like(self, tweet_id: int) -> None: ...
    
    async def follow(self, user_id: int) -> None: ...
    
    async def stop_following(self, user_id: int) -> None: ...
    
    async def generate_feed(self) -> list[TweetDump]: ...
    
    async def check_followers(cls, user_id: int) -> list[User]: ...
    
    async def check_following(cls, user_id: int) -> list[User]: ...
